// Generated by CoffeeScript 1.4.0

/* Reverse Playback
*/


(function() {
  var audio_buffer, context, init_sound, load_sound_file, play_reversed, play_sound, source, stop_sound;

  context = new window.webkitAudioContext();

  source = null;

  audio_buffer = null;

  stop_sound = function() {
    if (source) {
      return source.noteOff(0);
    }
  };

  play_reversed = function(n_channels) {
    if (n_channels == null) {
      n_channels = 1;
    }
    source = context.createBufferSource();
    Array.prototype.reverse.call(audio_buffer.getChannelData(0));
    if (n_channels > 1) {
      Array.prototype.reverse.call(audio_buffer.getChannelData(1));
    }
    source.buffer = audio_buffer;
    source.loop = false;
    source.connect(context.destination);
    return source.noteOn(0);
  };

  play_sound = function() {
    source = context.createBufferSource();
    source.buffer = audio_buffer;
    source.loop = true;
    source.connect(context.destination);
    return source.noteOn(0);
  };

  init_sound = function(array_buffer) {
    return context.decodeAudioData(array_buffer, function(buffer) {
      var buttons;
      audio_buffer = buffer;
      buttons = document.querySelectorAll('button');
      return buttons[0].disabled = false;
    }, function(e) {
      return console.log('Error decoding file', e);
    });
  };

  load_sound_file = function(url) {
    var request;
    request = new XMLHttpRequest();
    request.open('GET', url, true);
    request.responseType = 'arraybuffer';
    request.onload = function(e) {
      return init_sound(this.response);
    };
    return request.send();
  };

  window.stop_sound = stop_sound;

  window.play_sound = play_sound;

  window.play_reversed = play_reversed;

  window.init_sound = init_sound;

  window.load_sound_file = load_sound_file;

}).call(this);
